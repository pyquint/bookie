"""empty message

Revision ID: 5e1b7546b8cf
Revises: 
Create Date: 2025-04-12 16:41:06.523986

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5e1b7546b8cf'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('books',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('series', sa.String(), nullable=True),
    sa.Column('author', sa.String(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('language', sa.String(), nullable=False),
    sa.Column('isbn', sa.String(), nullable=False),
    sa.Column('genres', sa.String(), nullable=False),
    sa.Column('characters', sa.String(), nullable=False),
    sa.Column('book_format', sa.String(), nullable=True),
    sa.Column('edition', sa.String(), nullable=True),
    sa.Column('pages', sa.Integer(), nullable=True),
    sa.Column('publisher', sa.String(), nullable=True),
    sa.Column('publish_date', sa.String(), nullable=True),
    sa.Column('first_publish_date', sa.String(), nullable=True),
    sa.Column('awards', sa.String(), nullable=False),
    sa.Column('num_ratings', sa.Float(), nullable=False),
    sa.Column('ratings_by_stars', sa.String(), nullable=False),
    sa.Column('liked_percent', sa.Float(), nullable=False),
    sa.Column('setting', sa.String(), nullable=False),
    sa.Column('cover_img', sa.String(), nullable=False),
    sa.Column('bbe_score', sa.Integer(), nullable=False),
    sa.Column('bbe_votes', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_books'))
    )
    with op.batch_alter_table('books', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_books_author'), ['author'], unique=False)
        batch_op.create_index(batch_op.f('ix_books_genres'), ['genres'], unique=False)
        batch_op.create_index(batch_op.f('ix_books_title'), ['title'], unique=False)

    op.create_table('reading_statuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_reading_statuses')),
    sa.UniqueConstraint('name', name=op.f('uq_reading_statuses_name'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('pp', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_date_created'), ['date_created'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('book_statuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.String(), nullable=False),
    sa.Column('reading_status_id', sa.Integer(), nullable=False),
    sa.Column('finished_chapters', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name=op.f('fk_book_statuses_book_id_books')),
    sa.ForeignKeyConstraint(['reading_status_id'], ['reading_statuses.id'], name=op.f('fk_book_statuses_reading_status_id_reading_statuses')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_book_statuses_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_book_statuses'))
    )
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('book_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name=op.f('fk_comments_book_id_books')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_comments_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_comments'))
    )
    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_comments_date_created'), ['date_created'], unique=False)
        batch_op.create_index(batch_op.f('ix_comments_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comments_user_id'))
        batch_op.drop_index(batch_op.f('ix_comments_date_created'))

    op.drop_table('comments')
    op.drop_table('book_statuses')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.drop_index(batch_op.f('ix_users_date_created'))

    op.drop_table('users')
    op.drop_table('reading_statuses')
    with op.batch_alter_table('books', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_books_title'))
        batch_op.drop_index(batch_op.f('ix_books_genres'))
        batch_op.drop_index(batch_op.f('ix_books_author'))

    op.drop_table('books')
    # ### end Alembic commands ###
